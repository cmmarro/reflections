What happens when you initialize a repository? Why do you need to do it?

	Git adds metadata to the current folder. You need to do that in order to track files and commits.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area is the files you are editing. The working directory is just the folder you are within. The repository is the entire collection of files for your project.

How can you use the staging area to make sure you have one commit per logical
change?

	You stage only the files pertinent to the feature you are working on. The staged file is what you commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Branches may be used for experimental new features or different versions. Branching seperates those changes from the main project. You may only want to see history relevant to that feature, and not clutter the history of your main project with that feature.

How do the diagrams help you visualize the branch structure?

	You can see the chain of commits that lead to each head, and where they diverge.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?